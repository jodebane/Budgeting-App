import MySQLdb

####DATABASE CONNECTION
db=MySQLdb.connect(*******,

                   )


def budgetkeyprint():
    print ("Budget Number, Budget Name, Type, Number of Weeks")


####Beginning Check

cursor = db.cursor()
def openingcheck():
    print ("budgets: ")
    r= cursor.execute("SELECT * FROM Budgets")
    print (r)


###DELETE TABLES

def refreshtable():
    cursor.execute("DROP TABLE Budgets")
    cursor.execute("DROP TABLE budgetsinfo")
    cursor.execute("CREATE TABLE Budgets(IDnum int, Name text, Type text, Weeks int)")
    db.commit()


###Checks that Table Exists
def checktableisthere():
    global truth
    global budgetid
    cursor.execute("SELECT * FROM Budgets")
    checkvar = cursor.fetchall()
    if len(checkvar) > 0:
        cursor.execute("SELECT * FROM Budgets")
        print("Number of budgets so far: ")
        budgetid = (len(list(cursor)))
        print(budgetid)
        truth = 1
        budgetid = (len(list(cursor)))
        return budgetid
        return truth
        return True
    truth = 0;
    budgetid = 0
    return budgetid
    return truth
    return False


###Creates Info on First Budget in the Main Table
def createfirstbudget(truth, budgetid):
    if truth == 0:
        budgetnum = 1
    elif truth == 1:
        budgetnum = budgetid+1
        print ("Enter a name for this budget:  ")
    budgetname = input("Enter a name    ")
    print ("press 1 for repeating, 2 for one-time  ")
    budgettype = int(input("1,  or 2 "))
    if budgettype == 1 or budgettype == 2:
        if budgettype == 1:
            budgettypetext = "repeating"
        elif budgettype == 2:
            budgettypetext = "one-time"
        print ("Enter a timespan for this budget by number of weeks. For instance, if it is a monthly budget, type '4'  ")
        budgettimespan = int(input("Enter a number of weeks  "))
        cursor.execute("INSERT INTO Budgets VALUES(%s, %s, %s, %s)", (budgetnum, budgetname, budgettypetext, budgettimespan))
        cursor.execute("SELECT * FROM Budgets")
        rows = cursor.fetchall()
        budgetkeyprint()
        print (rows)
        db.commit()
    else:
        print ("error. Please enter a correct number and try again")
        createfirstbudget(truth, budgetid)


###Allows User to Design Budget after Defining it
def budgetmaker(chosenbudgetid):
    cursor.execute("SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME ='budgetsinfo'")
    row = cursor.fetchall()
    if len(row)<1:
        cursor.execute("CREATE TABLE budgetsinfo(COLUMNID text, CATEGORY text, USDAMOUNT int)")
    totamount = int(input("What is the total amount in USD in this budget?   "))
    amountspent = 0
    newcategorylist = [["Total", totamount]]
    cursor.execute("INSERT INTO budgetsinfo VALUES(%s, %s, %s)", ((chosenbudgetid), newcategorylist[0][0], newcategorylist[0][1]))

    numberofcategories = int(input("Enter the total number of categories in your budget  "))
    while len(newcategorylist) < numberofcategories:
        for r in range(1, numberofcategories+1):
            categoryname = (input("Enter category name:  "))
            categorybudget = int(input("Enter category budget:  "))
            newcategorylist.append([categoryname, categorybudget])
            cursor.execute("INSERT INTO budgetsinfo VALUES(%s, %s, %s)", (chosenbudgetid, newcategorylist[r][0], newcategorylist[r][1]))
            amountspent = amountspent + newcategorylist[r][1]
    if amountspent < totamount:
        newcategorylist.append(["Savings", (totamount - amountspent)])
    print(newcategorylist)



    ##APPEND TO SQL, rows with name and amount for each category, including oen for total


#####Allows User to View Budget

def viewbudget():
    viewname = (input("Enter the id of the budget you wish to view "))
    cursor.execute("SELECT * FROM budgetsinfo WHERE COLUMNID = %s", (viewname))
    y = cursor.fetchall()
    print(y)









def startingmenu():
    global truth
    global budgetid
    cursor.execute("SELECT * FROM Budgets")
    budgetprint = cursor.fetchall()
    print ("KEY FOR BUDGET INFO: Id number, Name, Type, Weeks")
    print (budgetprint)
    print ("To add a new budget to list, press 1. To newly design an existing budget, press 2. To delete one budget, press 3. To delete all, press 4")
    print("To view a budget, press 5. To edit a budget, press 6")
    startanswerint = int(input("Press a number "))
    if startanswerint == 1:
        checktableisthere()
        createfirstbudget(truth, budgetid)
    elif startanswerint == 2:
        print("PLACEHOLDER")
        print("Choose a budget to manage")
        openingcheck()
        chosenbudgetid = (input("Enter the id # of a budget:   "))
        cursor.execute(("SELECT * FROM Budgets WHERE IDnum = %s"), (chosenbudgetid))
        row = cursor.fetchall()
        print(row)
        if len(row) > 0:
            budgetmaker(chosenbudgetid)
        else:
            print("NOT FOUND")
    elif startanswerint == 3:
        print("PLACEHOLDER")

    elif startanswerint == 4:
        refreshtable()
    elif startanswerint == 5:
         viewbudget()
    finalanswer = int(input("Press 1 to continue using app  "))
    if finalanswer == 1:
        startingmenu()




startingmenu()
